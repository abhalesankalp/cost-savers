[{"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\index.js":"1","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\App.js":"2","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\reportWebVitals.js":"3","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\MainPage.js":"4","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\ProductDetails.js":"5","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Header.js":"6","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Footer.js":"7","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\PreditcForLocation.js":"8","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\PreditcForProduct.js":"9","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Grid.js":"10","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Formatter.js\\FilterGrid.js":"11","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Formatter.js\\NumericEditor.js":"12","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Formatter.js\\NumberFormatter.js":"13","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Formatter.js\\RangeFilter.js":"14","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Welcome.js":"15","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\DropDownComponent.js":"16","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\DashboardComponents\\Dashboard.js":"17","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\DashboardComponents\\HeaderComponent.js":"18","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\DashboardComponents\\ProductComponent.js":"19","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\DashboardComponents\\ProductDetailsComponent.js":"20"},{"size":501,"mtime":1607664297683,"results":"21","hashOfConfig":"22"},{"size":264,"mtime":1607917402922,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":786,"mtime":1607856979794,"results":"25","hashOfConfig":"22"},{"size":347,"mtime":1607771254376,"results":"26","hashOfConfig":"22"},{"size":550,"mtime":1607603476095,"results":"27","hashOfConfig":"22"},{"size":236,"mtime":1607576528853,"results":"28","hashOfConfig":"22"},{"size":752,"mtime":1607765642455,"results":"29","hashOfConfig":"22"},{"size":1045,"mtime":1607593123181,"results":"30","hashOfConfig":"31"},{"size":1453,"mtime":1607862678002,"results":"32","hashOfConfig":"22"},{"size":7297,"mtime":1607856938691,"results":"33","hashOfConfig":"22"},{"size":1029,"mtime":1607678959320,"results":"34","hashOfConfig":"22"},{"size":278,"mtime":1607664815445,"results":"35","hashOfConfig":"22"},{"size":1538,"mtime":1607663753065,"results":"36","hashOfConfig":"22"},{"size":1363,"mtime":1607771303249,"results":"37","hashOfConfig":"22"},{"size":2319,"mtime":1607771289214,"results":"38","hashOfConfig":"22"},{"size":3352,"mtime":1607920284965,"results":"39","hashOfConfig":"22"},{"size":1436,"mtime":1607925664716,"results":"40","hashOfConfig":"22"},{"size":4194,"mtime":1607923908133,"results":"41","hashOfConfig":"22"},{"size":3633,"mtime":1607930816663,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1s69vom",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"12tpy54",{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"45"},"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\index.js",[],["92","93"],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\App.js",[],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\reportWebVitals.js",[],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\MainPage.js",["94","95"],"import Header from './Header';\r\nimport Footer from './Footer';\r\nimport ProductDetails from './ProductDetails';\r\nimport Welcome from './Welcome';\r\nimport React, { Fragment } from \"react\";\r\nimport Dashboard from './DashboardComponents/Dashboard';\r\n\r\nclass MainPage extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isWelcomePage: true\r\n        };\r\n        this.handler = this.handler.bind(this)\r\n    }\r\n\r\n    handler() {\r\n        this.setState({\r\n          isWelcomePage: false\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <Fragment>\r\n            <Header/>\r\n            {this.state.isWelcomePage? <Welcome handler = {this.handler} /> : <Dashboard/>};\r\n        </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainPage;","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\ProductDetails.js",[],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Header.js",[],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Footer.js",[],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\PreditcForLocation.js",["96","97","98"],"import React from 'react';\r\nimport '../CSS/Product.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport GridJS from './Grid';\r\nimport FilterGrid from './Formatter.js/FilterGrid';\r\nclass PreditcForLocation extends React.Component{\r\n    state={\r\n        \r\n    }\r\n    Locations = [\r\n        { text: 'Slo', id: 1 },\r\n        { text: 'Pune', id: 2 }, \r\n    ];\r\n    render(){\r\n        let btnClass = [\r\n            'button',\r\n            'button1'\r\n          ]\r\n          btnClass = btnClass.join(' ');\r\n        return (\r\n            <div className=\"PredictForLocation\">\r\n                <div className=\"TempDiv\">\r\n                    <FilterGrid/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PreditcForLocation;","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\PreditcForProduct.js",[],["99","100"],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Grid.js",["101","102","103","104","105","106","107"],"import React, { useState } from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\nimport data from '../DataFile/Data.json';\r\nimport 'ag-grid-enterprise';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\nconst GridJS = () => {\r\n    const [gridApi, setGridApi] = useState(null);\r\n    const [gridColumnApi, setGridColumnApi] = useState(null);\r\n    const min = 10;\r\n    const max = 70;\r\n    console.log(data);\r\n    const [rowData, setRowData] = useState(data);\r\n\r\n    function onGridReady(params) {\r\n      \r\n    }\r\n\r\n    return (\r\n        <div className=\"ag-theme-alpine\" style={ { height: 350, width: 1020 } }>\r\n            <AgGridReact\r\n                onGridReady={onGridReady}\r\n                rowData={rowData}>\r\n                <AgGridColumn  field=\"ProductName\" sortable=\"true\" editable=\"true\" filter={true}></AgGridColumn>\r\n                <AgGridColumn field=\"Category\" sortable=\"true\" editable=\"true\" filter={true}></AgGridColumn>\r\n                <AgGridColumn field=\"SubCategory\" sortable=\"true\" editable=\"true\" filter={true}></AgGridColumn>\r\n                <AgGridColumn field=\"OptimalInventory\" sortable=\"true\" editable=\"true\" filter={true}></AgGridColumn>\r\n                <AgGridColumn field=\"CostDifference\" sortable=\"true\" editable=\"true\" filter={true}></AgGridColumn>\r\n            </AgGridReact>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GridJS;","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Formatter.js\\FilterGrid.js",[],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Formatter.js\\NumericEditor.js",[],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Formatter.js\\NumberFormatter.js",[],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Formatter.js\\RangeFilter.js",[],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\Welcome.js",[],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\DropDownComponent.js",["108"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../CSS/Product.css';\r\n\r\nclass DropdownComponent extends React.Component {  \r\n    static propTypes = {\r\n      list: PropTypes.array.isRequired\r\n    };\r\n    \r\n    static defaultProps = {\r\n      list: []\r\n    };\r\n    \r\n    constructor(props) {\r\n      super(props);    \r\n      this.state = {\r\n        isOpen: false,\r\n        labelItem: null,\r\n        typeDropdown: null\r\n      };\r\n    }\r\n  \r\n    componentWillMount() {\r\n      const { label } = this.props.list[0];\r\n      let firstItem = null;    \r\n      if (typeof label != 'undefined') {\r\n        this.checkType(false);\r\n        firstItem = label;\r\n      } else {\r\n        this.checkType(true);\r\n        firstItem = this.props.list[0];\r\n      }        \r\n      this.setState({\r\n          labelItem: firstItem\r\n      });    \r\n    }\r\n    checkType = (value) => {\r\n      this.setState({\r\n          typeDropdown: value\r\n      });    \r\n    };\r\n    showDropdown = () => {\r\n      console.log(\"Hie\");\r\n      this.setState({ isOpen: true });\r\n      document.addEventListener(\"click\", this.hideDropdown);\r\n    };\r\n    hideDropdown = () => {\r\n      this.setState({ isOpen: false });\r\n      document.removeEventListener(\"click\", this.hideDropdown);\r\n    };\r\n    chooseItem = (value) => {    \r\n      if (this.state.labelItem !== value) {\r\n        this.setState({\r\n          labelItem: value      \r\n        })\r\n      }    \r\n    };\r\n    \r\n    renderDataDropDown = (item, index) => {    \r\n      const {value, label} = this.state.typeDropdown ? {value: index, label: item} : item;    \r\n      return (\r\n        <li\r\n          key={index}\r\n          value={value}\r\n          onClick={() => this.chooseItem(label)}\r\n        >\r\n          <a>{label}</a>\r\n        </li> \r\n      )\r\n    };\r\n    render () {\r\n      const { list } = this.props;    \r\n      return (\r\n        <div className=\"dropdown\">\r\n          <button className=\"dropdown-toggle\" type=\"button\" onMouseOver={this.showDropdown}>\r\n            {this.state.labelItem}\r\n            <span className=\"caret\"></span>\r\n          </button>\r\n          <ul className={`dropdown-menu ${this.state.isOpen ? 'dropdownBlock' : ''}`}>\r\n            {list.map(this.renderDataDropDown)}\r\n          </ul>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n   \r\n  export default DropdownComponent;","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\DashboardComponents\\Dashboard.js",["109","110","111"],"import React from 'react';\r\nimport '../../CSS/Product.css';\r\nimport HeaderComponent from './HeaderComponent';\r\nimport ProductComponent from './ProductComponent';\r\nimport ProductDetailsComponent from './ProductDetailsComponent';\r\nimport Result from '../../DataFile/RD.json';\r\n\r\nclass Dashboard extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {selectedComponent:0,ProductInventoryQuantity:-2,allProductQuantity:null, TotalProductInventoryQuantityCost:0};\r\n        this.setProductForProductDetails =  this.setProductForProductDetails.bind(this);\r\n    }\r\n\r\n    setProductForProductDetails(componentID, inventoryQuantity, allProductQuantity) {\r\n        this.setState({\r\n            selectedComponent: componentID,\r\n            ProductInventoryQuantity: allProductQuantity[componentID],\r\n        })\r\n\r\n        if(this.state.allProductQuantity!=0)\r\n        {\r\n            this.setState({\r\n                allProductQuantity:allProductQuantity\r\n            })\r\n\r\n            var TotalProductInventoryQuantityCost = 0;\r\n            Result.forEach((element,key) => {\r\n               TotalProductInventoryQuantityCost += parseFloat((parseFloat(allProductQuantity[key])-parseFloat(element.AverageSales))*parseFloat(element.BuyPrice));\r\n            });\r\n\r\n            this.setState({\r\n                TotalProductInventoryQuantityCost:TotalProductInventoryQuantityCost\r\n            })\r\n        }\r\n    }\r\n\r\n   \r\n    render(){\r\n        const items = []\r\n        var TotalProductInventoryQuantityCost = 0;\r\n        var ETR = 0;\r\n        var count = 0;\r\n        var productQuantity = this.state.productQuantity?? new Array();\r\n        Result.forEach((element,key) => {\r\n            ETR += parseFloat((element.COGS/element.Inventory));\r\n            count+=1;\r\n            productQuantity[key] = element.Inventory; \r\n           items.push(<ProductComponent product={element} elementID = {key} allProductQuantity={productQuantity} setProductForProductDetails = {this.setProductForProductDetails.bind(this)} OriginalQuantityProducts = {Result[key].Inventory}/>);\r\n           TotalProductInventoryQuantityCost += parseFloat((parseFloat(productQuantity[key])-parseFloat(element.AverageSales))*parseFloat(element.BuyPrice));\r\n        });\r\n\r\n       \r\n        ETR = (ETR/count).toFixed(2);\r\n        \r\n        if(this.state.ProductInventoryQuantity==-2)\r\n        {\r\n            this.setState({ProductInventoryQuantity:Result[0].Inventory});\r\n            this.setState({TotalProductInventoryQuantityCost:TotalProductInventoryQuantityCost});\r\n        }\r\n\r\n        return(\r\n            <div className=\"PredictForLocation\">\r\n                <HeaderComponent totalSale={Result[0].TotalSales.toFixed(2)} TotalProductInventoryQuantityCost={this.state.TotalProductInventoryQuantityCost.toFixed(2)} TurnOverRation={ETR} CostSaved={(this.state.TotalProductInventoryQuantityCost*0.25).toFixed(2)}/>\r\n                <div className=\"itemDiv scrollbar scrollbar-primary  mt-5 mx-auto\">\r\n                    {items}\r\n                </div>\r\n                <ProductDetailsComponent product={Result[this.state.selectedComponent]} ProductInventoryQuantity={this.state.ProductInventoryQuantity} TotalProductInventoryQuantityCost={this.state.TotalProductInventoryQuantityCost.toFixed(2)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\DashboardComponents\\HeaderComponent.js",[],"C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\DashboardComponents\\ProductComponent.js",["112","113","114","115"],"import React from 'react';\r\nimport '../../CSS/Product.css';\r\nimport bottle from '../../Images/bottle.png'\r\nimport mat from '../../Images/mat.png'\r\nimport cream from '../../Images/cream.png'\r\nimport tshirt from '../../Images/Tshirt.png'\r\n\r\nclass ProductComponent extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.DivRef = React.createRef();\r\n        this.UpdateBackground = this.UpdateBackground.bind(this);\r\n        this.RemoveBackground = this.RemoveBackground.bind(this);\r\n        this.MakeEditable = this.MakeEditable.bind(this);\r\n        this.HideTextbox = this.HideTextbox.bind(this);\r\n        this.state = {isClicked:false, isQuantityEditable:false, ProductQuantity:-2, AllProductQuantity:0}\r\n    }\r\n\r\n    UpdateBackground(){\r\n        this.setState({isClicked:true})\r\n    }\r\n\r\n    RemoveBackground(){\r\n        this.setState({isClicked:false})\r\n    }\r\n\r\n    MakeEditable(){\r\n        this.setState({isQuantityEditable:true})\r\n    }\r\n\r\n    componentWillReceiveProps(){ //this is called to before render method\r\n        this.setState({\r\n           ProductQuantity:this.props.product.Inventory\r\n         })\r\n    }\r\n\r\n    componentDidMount() {\r\n       \r\n      }\r\n\r\n      TextState(evt){\r\n        alert(evt.target.value);\r\n      }\r\n\r\n      \r\n    HideTextbox(evt){\r\n        \r\n        var temp = this.state.allProductQuantity==undefined?this.props.allProductQuantity:this.state.allProductQuantity;\r\n        if(temp){\r\n            temp[this.props.elementID] = evt.target.value;\r\n            this.setState({ AllProductQuantity: temp }); \r\n            this.setState({ ProductQuantity: temp[this.props.elementID]});\r\n            this.setState({isQuantityEditable:!this.state.isQuantityEditable});\r\n            this.props.setProductForProductDetails(this.props.elementID, this.state.ProductQuantity,this.state.AllProductQuantity??0)\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.ProductQuantity==-2)\r\n        {\r\n            this.setState({ProductQuantity:this.props.product.Inventory})\r\n            this.setState({AllProductQuantity:this.props.allProductQuantity})\r\n        }\r\n        \r\n        var imgSrc;\r\n        var cased = parseInt(this.props.elementID%4)+1;\r\n        switch(cased)\r\n        {\r\n            case 1:imgSrc = bottle;break;\r\n            case 2:imgSrc = mat; break;\r\n            case 3:imgSrc = tshirt; break;\r\n            case 4:imgSrc = cream; break;\r\n        }\r\n\r\n        console.log(imgSrc);\r\n        return(\r\n            <div className={\"ProductDiv \" + (this.state.isClicked ? 'ChangeBackGfround' : '')} onMouseEnter ={this.UpdateBackground} onMouseLeave={this.RemoveBackground} onClick={()=>this.props.setProductForProductDetails(this.props.elementID, this.state.ProductQuantity,this.state.AllProductQuantity??0)}>\r\n                <div className=\"ProductImage\"><img src={imgSrc}/></div>\r\n                <div className=\"ProductDetails\">\r\n                    <div className=\"ProductName\">{this.props.product.ProductName}</div>\r\n                    <div className=\"ProductInfo\">{this.props.product.ProductName}</div>\r\n                    <div className=\"ProductID\">{this.props.product.ProductID}</div>\r\n                </div>\r\n                <div className={\"PredictedQuantity \" + (this.state.isClicked ? 'ChangeBacfkGround' : '')} onClick = {this.MakeEditable} onMouseEnter ={this.UpdateBackground} onMouseLeave={this.RemoveBackground}><div className=\"PRQuant\">Recommended</div><div>{this.props.OriginalQuantityProducts}</div></div>\r\n                <div className={\"ProductQuantity \" + (this.state.isClicked ? 'ChangeBackGfround' : '')} onClick = {this.MakeEditable} onMouseEnter ={this.UpdateBackground} onMouseLeave={this.RemoveBackground}>\r\n                        {this.state.isQuantityEditable? \r\n                        <div >\r\n                            <input type=\"text\" className =\"EditableQuantity\" defaultValue ={this.state.AllProductQuantity[this.props.elementID]} onBlur={this.HideTextbox}></input>\r\n                        </div>:<div ref={this.DivRef}>{Math.ceil(this.state.AllProductQuantity[this.props.elementID])}</div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductComponent;","C:\\Users\\Sankalp.Abhale\\cost-savers\\src\\Component\\DashboardComponents\\ProductDetailsComponent.js",["116","117","118","119","120","121","122"],"import React from 'react';\r\nimport '../../CSS/Product.css';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport FivePercent from '../../Images/FivePercent.png';\r\nimport TenPercent from '../../Images/TenPercent.png';\r\nimport SaleFivePercent from '../../Images/SalesFivePercent.png';\r\nimport SaleTenPercent from '../../Images/SalesSevenPercent.png';\r\n\r\n\r\nclass ProductDetailsComponent extends React.Component{\r\n    render(){\r\n        var icc = ((this.props.ProductInventoryQuantity-this.props.product.AverageSales)*this.props.product.BuyPrice).toFixed(2);\r\n        var  pic = this.props.TotalProductInventoryQuantityCost;\r\n        console.log(icc);\r\n        console.log(pic);\r\n        return(\r\n            <div className=\"ProductDetailsDiv scrollbar scrollbar-primary  mt-5 mx-auto\">\r\n                <div className=\"ProductDetailsTitle\">Product Inventory Details</div>\r\n                <div className=\"ProductEfiiciencyDetails\">\r\n                    <table>\r\n                    <tr>\r\n                        <td className=\"ProductEfiiciencyDetailsTd\">\r\n                            <div className=\"ProductEfiiciencyDetailsValue\">${this.props.product.Margin}</div><div className=\"EfficiencyTitle\">Profit Margin</div>\r\n                        </td>\r\n                        <td className=\"ProductEfiiciencyDetailsTd\">\r\n                            <div className=\"ProductEfiiciencyDetailsValue\">{(this.props.product.BuyPrice/this.props.product.COGS*this.props.ProductInventoryQuantity).toFixed(0)}</div><div className=\"EfficiencyTitle\">Estimated Days to Sell</div>\r\n                        </td>\r\n                        <td className=\"ProductEfiiciencyDetailsTd\">\r\n                            <div className=\"ProductEfiiciencyDetailsValue\">${((this.props.ProductInventoryQuantity-this.props.product.AverageSales)*this.props.product.BuyPrice).toFixed(2)}</div><div className=\"EfficiencyTitle\">Inventory Carrying Cost</div>\r\n                        </td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td className=\"ProductEfiiciencyDetailsTd\">\r\n                            <div className=\"ProductEfiiciencyDetailsValue\">${this.props.product.COGS.toFixed(2)}</div><div className=\"EfficiencyTitle\">COGS</div>\r\n                        </td>\r\n                        <td className=\"ProductEfiiciencyDetailsTd\">\r\n                            <div className=\"ProductEfiiciencyDetailsValue\">${(this.props.product.SalesForThisProduct).toFixed(2)}</div><div className=\"EfficiencyTitle\">Total Sales (Month)</div>\r\n                        </td>\r\n                        <td className=\"ProductEfiiciencyDetailsTd\">\r\n                            <div className=\"ProductEfiiciencyDetailsValue\">{(this.props.product.COGS/this.props.product.Inventory).toFixed(2)}</div><div>Inventory Turnover Ratio</div>\r\n                        </td>\r\n                    </tr>\r\n                    </table>\r\n                </div>\r\n                <div className=\"chartOne\">\r\n                        {parseInt(this.props.ProductInventoryQuantity)%2==0?\r\n                      <img className=\"chartImageOneEven\" src={FivePercent} />:\r\n                      <img className=\"chartImageOne\" src={TenPercent} />}\r\n                </div>\r\n                <div className=\"chartTwo\">\r\n                    {parseInt(this.props.ProductInventoryQuantity)%2==0?\r\n                      <img className=\"chartImageTwoEven\" src={SaleTenPercent} />:\r\n                      <img className=\"chartImageTwo\" src={SaleFivePercent} />}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductDetailsComponent;",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"131","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":22},{"ruleId":"127","severity":1,"message":"132","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":14},{"ruleId":"127","severity":1,"message":"133","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":14},{"ruleId":"127","severity":1,"message":"134","line":19,"column":22,"nodeType":"129","messageId":"130","endLine":19,"endColumn":30},{"ruleId":"123","replacedBy":"135"},{"ruleId":"125","replacedBy":"136"},{"ruleId":"127","severity":1,"message":"137","line":9,"column":12,"nodeType":"129","messageId":"130","endLine":9,"endColumn":19},{"ruleId":"127","severity":1,"message":"138","line":9,"column":21,"nodeType":"129","messageId":"130","endLine":9,"endColumn":31},{"ruleId":"127","severity":1,"message":"139","line":10,"column":12,"nodeType":"129","messageId":"130","endLine":10,"endColumn":25},{"ruleId":"127","severity":1,"message":"140","line":10,"column":27,"nodeType":"129","messageId":"130","endLine":10,"endColumn":43},{"ruleId":"127","severity":1,"message":"141","line":11,"column":11,"nodeType":"129","messageId":"130","endLine":11,"endColumn":14},{"ruleId":"127","severity":1,"message":"142","line":12,"column":11,"nodeType":"129","messageId":"130","endLine":12,"endColumn":14},{"ruleId":"127","severity":1,"message":"143","line":14,"column":21,"nodeType":"129","messageId":"130","endLine":14,"endColumn":31},{"ruleId":"144","severity":1,"message":"145","line":67,"column":11,"nodeType":"146","endLine":67,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":21,"column":41,"nodeType":"149","messageId":"150","endLine":21,"endColumn":43},{"ruleId":"151","severity":1,"message":"152","line":44,"column":60,"nodeType":"153","messageId":"154","endLine":44,"endColumn":71},{"ruleId":"147","severity":1,"message":"155","line":56,"column":47,"nodeType":"149","messageId":"150","endLine":56,"endColumn":49},{"ruleId":"147","severity":1,"message":"155","line":48,"column":49,"nodeType":"149","messageId":"150","endLine":48,"endColumn":51},{"ruleId":"147","severity":1,"message":"155","line":58,"column":38,"nodeType":"149","messageId":"150","endLine":58,"endColumn":40},{"ruleId":"156","severity":1,"message":"157","line":66,"column":9,"nodeType":"158","messageId":"159","endLine":72,"endColumn":10},{"ruleId":"160","severity":1,"message":"161","line":77,"column":47,"nodeType":"146","endLine":77,"endColumn":66},{"ruleId":"127","severity":1,"message":"162","line":3,"column":10,"nodeType":"129","messageId":"130","endLine":3,"endColumn":18},{"ruleId":"147","severity":1,"message":"155","line":46,"column":73,"nodeType":"149","messageId":"150","endLine":46,"endColumn":75},{"ruleId":"160","severity":1,"message":"161","line":47,"column":23,"nodeType":"146","endLine":47,"endColumn":78},{"ruleId":"160","severity":1,"message":"161","line":48,"column":23,"nodeType":"146","endLine":48,"endColumn":73},{"ruleId":"147","severity":1,"message":"155","line":51,"column":69,"nodeType":"149","messageId":"150","endLine":51,"endColumn":71},{"ruleId":"160","severity":1,"message":"161","line":52,"column":23,"nodeType":"146","endLine":52,"endColumn":81},{"ruleId":"160","severity":1,"message":"161","line":53,"column":23,"nodeType":"146","endLine":53,"endColumn":78},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'ProductDetails' is defined but never used.","'Button' is defined but never used.","'GridJS' is defined but never used.","'btnClass' is assigned a value but never used.",["163"],["164"],"'gridApi' is assigned a value but never used.","'setGridApi' is assigned a value but never used.","'gridColumnApi' is assigned a value but never used.","'setGridColumnApi' is assigned a value but never used.","'min' is assigned a value but never used.","'max' is assigned a value but never used.","'setRowData' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","Expected '===' and instead saw '=='.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'PieChart' is defined but never used.","no-global-assign","no-unsafe-negation"]